# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="dieter"
ZSH_THEME="geoffgarside"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

plugins=(git)

source $ZSH/oh-my-zsh.sh
source ~/.zsh/terminal-greeting.sh
~/.zsh/hello.js

#echo "Good morning sunshine!"

#prompt header
function parse_git_branch {
    branch=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [ "HEAD" = "$branch" ]; then
      echo "(no branch)"
    else
      echo "$branch"
    fi
  }

  function prompt_segment {
    # for colours: http://en.wikipedia.org/wiki/ANSI_escape_code#Colors
    # change the 37 to change the foreground
    # change the 45 to change the background
    if [[ ! -z "$1" ]]; then
      echo "\[\033[${2:-37};45m\]${1}\[\033[0m\]"
    fi
  }

  function build_mah_prompt {
    # time
    ps1="$(prompt_segment " \@ ")"

    # cwd
    ps1="${ps1} $(prompt_segment " \w ")"

    # git branch
    git_branch=`parse_git_branch`
    if [[ ! -z "$git_branch" ]]
    then
      ps1="${ps1} $(prompt_segment " $git_branch " 32)"
    fi

    #terminal icon
    ps1="${ps1}\nâœª "

    echo "$ps1"
  }

  function set_prompt {
    PS1=$(build_mah_prompt)
  }

  PROMPT_COMMAND='set_prompt'
  #PS1=$(build_mah_prompt)

# Git aliases
alias gs="git status"
alias gd="git diff --patience --ignore-space-change"
alias gc="git checkout"
alias gb="git branch"
alias ga="git add"
alias gh="git hist"
alias gr="git remote -v"

# file navigation
alias c="clear"

alias tri="cd ~/trilogy && ls -l"
alias dot="cd ~/dotfiles && ls -l"

# spackle
alias sp="spackler build -p . -d"

# export NVM_DIR="$HOME/.nvm"
# This loads nvm
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 

# Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

export GOPATH="${HOME}/go"
# export GOROOT="$(brew --prefix golang)/libexec"

# Add Visual Studio Code (code)
export PATH=$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin:~/bin

# Setting PATH for Python 3.6
export PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"

# Port Stuff
show-port() { echo "$(lsof -i :$1)"; }
free-port() { kill "$(lsof -t -i :$1)"; }
kill-port() { kill -kill "$(lsof -t -i :$1)"; }

# Preferred editor for local and remote sessions
if [[ -f ~/.zshrc.work ]]; then
  source ~/.zshrc.work
fi

export PATH="/usr/local/opt/sqlite/bin:$PATH"
source /Users/lxc3def/google-cloud-sdk/path.zsh.inc
source /Users/lxc3def/google-cloud-sdk/completion.zsh.inc

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/lxc3def/n/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/lxc3def/n/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/lxc3def/n/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/lxc3def/n/google-cloud-sdk/completion.zsh.inc'; fi
